apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-deployment
  namespace: democloudops
spec:
  replicas: 3
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: docker-registry-zone
                operator: In
                values:
                - a
                - b
                - c
      volumes:
      - name: data-store
        persistentVolumeClaim:
          claimName: docker-store-pvc
      - name: registry-secret
        secret:
          secretName: docker-registry-secret
      - name: registry-cert-secret
        secret:
          secretName: docker-cert-secret
      initContainers:
      - name: alpine-init-container
        image: alpine:latest
        command:
        - 'sh'
        - '-c'
        - 'mkdir -p /var/lib/10weeksofcloudops'
      containers:
      - name: registry-cloudops
        image: registry:2.8.2
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        envFrom:
        - configMapRef:
            name: registry-configmap
        volumeMounts:
        - name: data-store
          mountPath: /var/lib/10weeksofcloudops
        - name: registry-secret
          mountPath: /auth
        - name: registry-cert-secret
          mountPath: /certs
        resources:
          requests:
            memory: "1Gi"
          limits:
            memory: "2Gi"
        ports:
        - containerPort: 5000



---

apiVersion: v1
kind: Service
metadata:
  name: registry-service
spec:
  type: LoadBalancer
  selector:
    app: docker-registry
  ports:
  - port: 5000
    targetPort: 5000

---
